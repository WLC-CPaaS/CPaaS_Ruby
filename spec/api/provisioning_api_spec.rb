=begin
#White Label Communications CPaas API Documentation

#A CPaaS platform API

The version of the OpenAPI document: 1.1
Contact: support@whitelabelcomm.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ProvisioningApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProvisioningApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ProvisioningApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProvisioningApi' do
    it 'should create an instance of ProvisioningApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ProvisioningApi)
    end
  end

  # unit tests for v1_ap_brand_brand_family_family_get
  # Get Family
  # Retrieve a family&#39;s details by the randomly generated ID.
  # @param brand brand
  # @param family family
  # @param [Hash] opts the optional parameters
  # @return [ProvisioningDocsDocsFamilyOutputSingle]
  describe 'v1_ap_brand_brand_family_family_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_brand_brand_family_family_model_get
  # Get Model List
  # Retrieve a list of all models within a family for a brand (e.g., Yealink and Polycom).
  # @param brand brand
  # @param family family
  # @param [Hash] opts the optional parameters
  # @option opts [String] :model_name 
  # @option opts [Integer] :page_size 
  # @option opts [String] :start_key 
  # @option opts [String] :status 
  # @return [ProvisioningDocsDocsModelOutput]
  describe 'v1_ap_brand_brand_family_family_model_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_brand_brand_family_family_model_model_get
  # Get Model
  # Retrieve a model&#39;s details by the randomly generated ID.
  # @param brand brand
  # @param family family
  # @param model model
  # @param [Hash] opts the optional parameters
  # @return [ProvisioningDocsDocsModelOutputSingle]
  describe 'v1_ap_brand_brand_family_family_model_model_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_brand_brand_family_family_model_model_template_get
  # Get Template List
  # Retrieve a list of all templates for a model within a brand (e.g., Yealink and Polycom).
  # @param brand brand
  # @param family family
  # @param model model
  # @param [Hash] opts the optional parameters
  # @option opts [String] :firmware 
  # @option opts [Integer] :page_size 
  # @option opts [String] :start_key 
  # @option opts [String] :status 
  # @option opts [String] :template_name 
  # @return [ProvisioningDocsDocsTemplatesOutput]
  describe 'v1_ap_brand_brand_family_family_model_model_template_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_brand_brand_family_family_model_model_template_template_get
  # Get Template
  # Retrieve details about a template for a model by the randomly generated ID.
  # @param brand brand
  # @param family family
  # @param model model
  # @param template template
  # @param [Hash] opts the optional parameters
  # @return [ProvisioningDocsDocsTemplateOutputSingle]
  describe 'v1_ap_brand_brand_family_family_model_model_template_template_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_brand_brand_family_get
  # Get Family List
  # Retrieve a list of all families for a brand (e.g., Yealink and Polycom).
  # @param brand brand
  # @param [Hash] opts the optional parameters
  # @option opts [String] :family_name 
  # @option opts [Integer] :page_size 
  # @option opts [String] :start_key 
  # @option opts [String] :status 
  # @return [ProvisioningDocsDocsFamilyOutput]
  describe 'v1_ap_brand_brand_family_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_brand_brand_get
  # Get Brand
  # Retrieve a brand&#39;s details by the randomly generated ID.
  # @param brand brand id to retrieve a brand
  # @param [Hash] opts the optional parameters
  # @return [ProvisioningDocsDocsBrandOutputSingle]
  describe 'v1_ap_brand_brand_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_brand_get
  # Get Brand
  # Retrieve a list of all brands (e.g., Yealink and Polycom) by client.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :brand_name 
  # @option opts [Integer] :page_size 
  # @option opts [String] :start_key 
  # @option opts [String] :status 
  # @return [ProvisioningDocsDocsBrandsOutput]
  describe 'v1_ap_brand_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_ap_configfile_generate_post
  # Generate config file
  # Generate a configuration file that includes a list of parameters passed to the specified template_id in the request payload, with populated values returned in the response.
  # @param params body params to generate config file
  # @param [Hash] opts the optional parameters
  # @return [ProvisioningDocsDocsConfigFileOutput]
  describe 'v1_ap_configfile_generate_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
