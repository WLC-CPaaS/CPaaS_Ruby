=begin
#White Label Communications CPaas API Documentation

#A CPaaS platform API

The version of the OpenAPI document: 1.1
Contact: support@whitelabelcomm.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::MediaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MediaApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::MediaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MediaApi' do
    it 'should create an instance of MediaApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::MediaApi)
    end
  end

  # unit tests for v1_account_account_id_media_media_id_file_get
  # Get Media File
  # Gather data about the media objects in an account.
  # @param account_id Account ID, 32 alpha numeric
  # @param media_id Media ID, 32 alpha numeric
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'v1_account_account_id_media_media_id_file_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_account_account_id_media_media_id_file_post
  # Add Media File
  # Include a media file that is connected to a media object in an account.
  # @param account_id Account ID, 32 alpha numeric
  # @param media_id Media ID, 32 alpha numeric
  # @param file Media file
  # @param [Hash] opts the optional parameters
  # @return [ServiceDocsMediaGetSingle]
  describe 'v1_account_account_id_media_media_id_file_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_account_accountid_media_get
  # Get Media List
  # View all media files for an account in your organization.
  # @param accountid Account ID, 32 alpha numeric
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_key start_key for pagination that was returned as next_start_key from your previous call
  # @option opts [Integer] :page_size number of records to return, range 1 to 50
  # @return [ServiceDocsMediaGetAll]
  describe 'v1_account_accountid_media_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_account_accountid_media_mediaid_delete
  # Delete Media
  # Remove a media file that is no longer in use from an account.
  # @param accountid Account ID, 32 alpha numeric
  # @param mediaid Device ID, 32 alpha numeric
  # @param [Hash] opts the optional parameters
  # @return [ServiceDocsMediaGetSingle]
  describe 'v1_account_accountid_media_mediaid_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_account_accountid_media_mediaid_get
  # Get Media Details
  # Permit users to view an account&#39;s specific media information.
  # @param accountid Account ID, 32 alpha numeric
  # @param mediaid Media ID, 32 alpha numeric
  # @param [Hash] opts the optional parameters
  # @return [ServiceDocsMediaGetSingle]
  describe 'v1_account_accountid_media_mediaid_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_account_accountid_media_post
  # Create Media
  # Generate a media object to allow users to upload a media file in an account.
  # @param accountid Account ID, 32 alpha numeric
  # @param media Media creation or update payload
  # @param [Hash] opts the optional parameters
  # @return [ServiceDocsMediaGetSingle]
  describe 'v1_account_accountid_media_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
