=begin
#White Label Communications CPaas API Documentation

#A CPaaS platform API

The version of the OpenAPI document: 1.1
Contact: support@whitelabelcomm.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0-SNAPSHOT

=end

require 'cgi'

module OpenapiClient
  class PhoneNumberApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Assigned Numbers List
    # Access all phone numbers assigned to a CPaaS account.
    # @param accountid [String] Account ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key Start key for pagination, obtained from previous responses
    # @option opts [Integer] :page_size Number of records to return per page (range: 1 to 50)
    # @return [ServiceDocsAccountPhonenumberGetAll]
    def v1_account_accountid_phonenumber_get(accountid, opts = {})
      data, _status_code, _headers = v1_account_accountid_phonenumber_get_with_http_info(accountid, opts)
      data
    end

    # Get Assigned Numbers List
    # Access all phone numbers assigned to a CPaaS account.
    # @param accountid [String] Account ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key Start key for pagination, obtained from previous responses
    # @option opts [Integer] :page_size Number of records to return per page (range: 1 to 50)
    # @return [Array<(ServiceDocsAccountPhonenumberGetAll, Integer, Hash)>] ServiceDocsAccountPhonenumberGetAll data, response status code and response headers
    def v1_account_accountid_phonenumber_get_with_http_info(accountid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumberApi.v1_account_accountid_phonenumber_get ...'
      end
      # verify the required parameter 'accountid' is set
      if @api_client.config.client_side_validation && accountid.nil?
        fail ArgumentError, "Missing the required parameter 'accountid' when calling PhoneNumberApi.v1_account_accountid_phonenumber_get"
      end
      # resource path
      local_var_path = '/v1/account/{accountid}/phonenumber'.sub('{' + 'accountid' + '}', CGI.escape(accountid.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'start_key'] = opts[:'start_key'] if !opts[:'start_key'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsAccountPhonenumberGetAll'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"PhoneNumberApi.v1_account_accountid_phonenumber_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#v1_account_accountid_phonenumber_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Assign Number
    # Assign a purchased phone number to an account.
    # @param payload [ServiceDocsPhonenumberAssignPayload] assignment payload
    # @param [Hash] opts the optional parameters
    # @return [ServiceAPIResponseStatusCodeOnly]
    def v1_account_phonenumber_assign_post(payload, opts = {})
      data, _status_code, _headers = v1_account_phonenumber_assign_post_with_http_info(payload, opts)
      data
    end

    # Assign Number
    # Assign a purchased phone number to an account.
    # @param payload [ServiceDocsPhonenumberAssignPayload] assignment payload
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceAPIResponseStatusCodeOnly, Integer, Hash)>] ServiceAPIResponseStatusCodeOnly data, response status code and response headers
    def v1_account_phonenumber_assign_post_with_http_info(payload, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumberApi.v1_account_phonenumber_assign_post ...'
      end
      # verify the required parameter 'payload' is set
      if @api_client.config.client_side_validation && payload.nil?
        fail ArgumentError, "Missing the required parameter 'payload' when calling PhoneNumberApi.v1_account_phonenumber_assign_post"
      end
      # resource path
      local_var_path = '/v1/account/phonenumber/assign'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(payload)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceAPIResponseStatusCodeOnly'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"PhoneNumberApi.v1_account_phonenumber_assign_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#v1_account_phonenumber_assign_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Disconnect Number
    # Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
    # @param payload [ServiceDocsPhonenumberUnassignPayload] disconnect payload
    # @param [Hash] opts the optional parameters
    # @return [ServiceAPIResponseStatusCodeOnly]
    def v1_account_phonenumber_disconnect_post(payload, opts = {})
      data, _status_code, _headers = v1_account_phonenumber_disconnect_post_with_http_info(payload, opts)
      data
    end

    # Disconnect Number
    # Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
    # @param payload [ServiceDocsPhonenumberUnassignPayload] disconnect payload
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceAPIResponseStatusCodeOnly, Integer, Hash)>] ServiceAPIResponseStatusCodeOnly data, response status code and response headers
    def v1_account_phonenumber_disconnect_post_with_http_info(payload, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumberApi.v1_account_phonenumber_disconnect_post ...'
      end
      # verify the required parameter 'payload' is set
      if @api_client.config.client_side_validation && payload.nil?
        fail ArgumentError, "Missing the required parameter 'payload' when calling PhoneNumberApi.v1_account_phonenumber_disconnect_post"
      end
      # resource path
      local_var_path = '/v1/account/phonenumber/disconnect'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(payload)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceAPIResponseStatusCodeOnly'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"PhoneNumberApi.v1_account_phonenumber_disconnect_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#v1_account_phonenumber_disconnect_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Unassigned Numbers List
    # Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key Start key for pagination, obtained from previous responses
    # @option opts [Integer] :page_size Number of records to return per page (range: 1 to 50)
    # @return [ServiceDocsAccountPhonenumberGetAll]
    def v1_account_phonenumber_get(opts = {})
      data, _status_code, _headers = v1_account_phonenumber_get_with_http_info(opts)
      data
    end

    # Get Unassigned Numbers List
    # Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key Start key for pagination, obtained from previous responses
    # @option opts [Integer] :page_size Number of records to return per page (range: 1 to 50)
    # @return [Array<(ServiceDocsAccountPhonenumberGetAll, Integer, Hash)>] ServiceDocsAccountPhonenumberGetAll data, response status code and response headers
    def v1_account_phonenumber_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumberApi.v1_account_phonenumber_get ...'
      end
      # resource path
      local_var_path = '/v1/account/phonenumber'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'start_key'] = opts[:'start_key'] if !opts[:'start_key'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsAccountPhonenumberGetAll'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"PhoneNumberApi.v1_account_phonenumber_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#v1_account_phonenumber_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Purchase Number
    # Purchase or activate a phone number for CPaaS accounts within your business.
    # @param phonenumber [Array<String>] phonenumber fields
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsOrderPhonenumber]
    def v1_account_phonenumber_post(phonenumber, opts = {})
      data, _status_code, _headers = v1_account_phonenumber_post_with_http_info(phonenumber, opts)
      data
    end

    # Purchase Number
    # Purchase or activate a phone number for CPaaS accounts within your business.
    # @param phonenumber [Array<String>] phonenumber fields
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsOrderPhonenumber, Integer, Hash)>] ServiceDocsOrderPhonenumber data, response status code and response headers
    def v1_account_phonenumber_post_with_http_info(phonenumber, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumberApi.v1_account_phonenumber_post ...'
      end
      # verify the required parameter 'phonenumber' is set
      if @api_client.config.client_side_validation && phonenumber.nil?
        fail ArgumentError, "Missing the required parameter 'phonenumber' when calling PhoneNumberApi.v1_account_phonenumber_post"
      end
      # resource path
      local_var_path = '/v1/account/phonenumber'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(phonenumber)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsOrderPhonenumber'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"PhoneNumberApi.v1_account_phonenumber_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#v1_account_phonenumber_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Unassign Number
    # Remove a phone number from an account and place it back on the list of unassigned phone numbers.
    # @param payload [ServiceDocsPhonenumberUnassignPayload] unassign payload
    # @param [Hash] opts the optional parameters
    # @return [ServiceAPIResponseStatusCodeOnly]
    def v1_account_phonenumber_unassign_post(payload, opts = {})
      data, _status_code, _headers = v1_account_phonenumber_unassign_post_with_http_info(payload, opts)
      data
    end

    # Unassign Number
    # Remove a phone number from an account and place it back on the list of unassigned phone numbers.
    # @param payload [ServiceDocsPhonenumberUnassignPayload] unassign payload
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceAPIResponseStatusCodeOnly, Integer, Hash)>] ServiceAPIResponseStatusCodeOnly data, response status code and response headers
    def v1_account_phonenumber_unassign_post_with_http_info(payload, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumberApi.v1_account_phonenumber_unassign_post ...'
      end
      # verify the required parameter 'payload' is set
      if @api_client.config.client_side_validation && payload.nil?
        fail ArgumentError, "Missing the required parameter 'payload' when calling PhoneNumberApi.v1_account_phonenumber_unassign_post"
      end
      # resource path
      local_var_path = '/v1/account/phonenumber/unassign'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(payload)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceAPIResponseStatusCodeOnly'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"PhoneNumberApi.v1_account_phonenumber_unassign_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#v1_account_phonenumber_unassign_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Search New Numbers
    # Conduct a search for available phone numbers for purchase within an area code.
    # @param area_code [String] Area code (exactly 3 numeric characters) example: 610 or 484
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :quantity Number of records to return (range: 1 to 100, defaults to 100 if not provided) (default to 100)
    # @return [ServiceDocsPhonenumberSearchGetAll]
    def v1_phonenumber_search_get(area_code, opts = {})
      data, _status_code, _headers = v1_phonenumber_search_get_with_http_info(area_code, opts)
      data
    end

    # Search New Numbers
    # Conduct a search for available phone numbers for purchase within an area code.
    # @param area_code [String] Area code (exactly 3 numeric characters) example: 610 or 484
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :quantity Number of records to return (range: 1 to 100, defaults to 100 if not provided) (default to 100)
    # @return [Array<(ServiceDocsPhonenumberSearchGetAll, Integer, Hash)>] ServiceDocsPhonenumberSearchGetAll data, response status code and response headers
    def v1_phonenumber_search_get_with_http_info(area_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumberApi.v1_phonenumber_search_get ...'
      end
      # verify the required parameter 'area_code' is set
      if @api_client.config.client_side_validation && area_code.nil?
        fail ArgumentError, "Missing the required parameter 'area_code' when calling PhoneNumberApi.v1_phonenumber_search_get"
      end
      # resource path
      local_var_path = '/v1/phonenumber/search'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'area_code'] = area_code
      query_params[:'quantity'] = opts[:'quantity'] if !opts[:'quantity'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsPhonenumberSearchGetAll'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"PhoneNumberApi.v1_phonenumber_search_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#v1_phonenumber_search_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
