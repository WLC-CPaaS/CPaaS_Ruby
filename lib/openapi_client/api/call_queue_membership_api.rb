=begin
#White Label Communications CPaas API Documentation

#A CPaaS platform API

The version of the OpenAPI document: 1.1
Contact: support@whitelabelcomm.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0-SNAPSHOT

=end

require 'cgi'

module OpenapiClient
  class CallQueueMembershipApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Grant Queue Membership to User
    # Allow users to create queue memberships for recipients.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param req_body [ServiceVOIPQueueMembershipAddData] payload fields
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsQueueMembershipOutput]
    def v1_account_account_id_queuemembership_post(account_id, req_body, opts = {})
      data, _status_code, _headers = v1_account_account_id_queuemembership_post_with_http_info(account_id, req_body, opts)
      data
    end

    # Grant Queue Membership to User
    # Allow users to create queue memberships for recipients.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param req_body [ServiceVOIPQueueMembershipAddData] payload fields
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsQueueMembershipOutput, Integer, Hash)>] ServiceDocsQueueMembershipOutput data, response status code and response headers
    def v1_account_account_id_queuemembership_post_with_http_info(account_id, req_body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CallQueueMembershipApi.v1_account_account_id_queuemembership_post ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling CallQueueMembershipApi.v1_account_account_id_queuemembership_post"
      end
      # verify the required parameter 'req_body' is set
      if @api_client.config.client_side_validation && req_body.nil?
        fail ArgumentError, "Missing the required parameter 'req_body' when calling CallQueueMembershipApi.v1_account_account_id_queuemembership_post"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/queuemembership'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(req_body)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsQueueMembershipOutput'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"CallQueueMembershipApi.v1_account_account_id_queuemembership_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CallQueueMembershipApi#v1_account_account_id_queuemembership_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Disable Queue Membership
    # Deactivate queue membership for a recipient.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param recipient_id [String] Recipient ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [ServiceAPIResponse]
    def v1_account_account_id_queuemembership_recipient_id_disable_post(account_id, recipient_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_queuemembership_recipient_id_disable_post_with_http_info(account_id, recipient_id, opts)
      data
    end

    # Disable Queue Membership
    # Deactivate queue membership for a recipient.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param recipient_id [String] Recipient ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceAPIResponse, Integer, Hash)>] ServiceAPIResponse data, response status code and response headers
    def v1_account_account_id_queuemembership_recipient_id_disable_post_with_http_info(account_id, recipient_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_disable_post ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_disable_post"
      end
      # verify the required parameter 'recipient_id' is set
      if @api_client.config.client_side_validation && recipient_id.nil?
        fail ArgumentError, "Missing the required parameter 'recipient_id' when calling CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_disable_post"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/queuemembership/{recipientID}/disable'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'recipientID' + '}', CGI.escape(recipient_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceAPIResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_disable_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CallQueueMembershipApi#v1_account_account_id_queuemembership_recipient_id_disable_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Enable Queue Membership
    # Activate queue membership for a recipient.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param recipient_id [String] Recipient ID, 32 alpha numeric
    # @param req_body [ServiceVOIPCallQueueEnableMembershipData] payload fields
    # @param [Hash] opts the optional parameters
    # @return [ServiceAPIResponse]
    def v1_account_account_id_queuemembership_recipient_id_enable_post(account_id, recipient_id, req_body, opts = {})
      data, _status_code, _headers = v1_account_account_id_queuemembership_recipient_id_enable_post_with_http_info(account_id, recipient_id, req_body, opts)
      data
    end

    # Enable Queue Membership
    # Activate queue membership for a recipient.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param recipient_id [String] Recipient ID, 32 alpha numeric
    # @param req_body [ServiceVOIPCallQueueEnableMembershipData] payload fields
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceAPIResponse, Integer, Hash)>] ServiceAPIResponse data, response status code and response headers
    def v1_account_account_id_queuemembership_recipient_id_enable_post_with_http_info(account_id, recipient_id, req_body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_enable_post ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_enable_post"
      end
      # verify the required parameter 'recipient_id' is set
      if @api_client.config.client_side_validation && recipient_id.nil?
        fail ArgumentError, "Missing the required parameter 'recipient_id' when calling CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_enable_post"
      end
      # verify the required parameter 'req_body' is set
      if @api_client.config.client_side_validation && req_body.nil?
        fail ArgumentError, "Missing the required parameter 'req_body' when calling CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_enable_post"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/queuemembership/{recipientID}/enable'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'recipientID' + '}', CGI.escape(recipient_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(req_body)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceAPIResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"CallQueueMembershipApi.v1_account_account_id_queuemembership_recipient_id_enable_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CallQueueMembershipApi#v1_account_account_id_queuemembership_recipient_id_enable_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
