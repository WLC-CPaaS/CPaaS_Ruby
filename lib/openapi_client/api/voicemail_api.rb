=begin
#White Label Communications CPaas API Documentation

#A CPaaS platform API

The version of the OpenAPI document: 1.1
Contact: support@whitelabelcomm.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0-SNAPSHOT

=end

require 'cgi'

module OpenapiClient
  class VoicemailApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get Voicemail Box List
    # List all voicemail boxes in an account.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key start_key for pagination that was returned as next_start_key from your previous call
    # @option opts [Integer] :page_size number of records to return, range 1 to 50
    # @return [ServiceDocsVoicemailGetAll]
    def v1_account_account_id_voicemail_get(account_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_get_with_http_info(account_id, opts)
      data
    end

    # Get Voicemail Box List
    # List all voicemail boxes in an account.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key start_key for pagination that was returned as next_start_key from your previous call
    # @option opts [Integer] :page_size number of records to return, range 1 to 50
    # @return [Array<(ServiceDocsVoicemailGetAll, Integer, Hash)>] ServiceDocsVoicemailGetAll data, response status code and response headers
    def v1_account_account_id_voicemail_get_with_http_info(account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_get ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_get"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'start_key'] = opts[:'start_key'] if !opts[:'start_key'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailGetAll'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create Voicemail Box
    # Create a voicemail box for receiving and storing voicemail messages.
    # @param account_id [String] account ID, 32 alphanumeric
    # @param voicemail [ServiceVOIPVoicemailAddEditData] voicemail payload fields
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailGetSingle]
    def v1_account_account_id_voicemail_post(account_id, voicemail, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_post_with_http_info(account_id, voicemail, opts)
      data
    end

    # Create Voicemail Box
    # Create a voicemail box for receiving and storing voicemail messages.
    # @param account_id [String] account ID, 32 alphanumeric
    # @param voicemail [ServiceVOIPVoicemailAddEditData] voicemail payload fields
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailGetSingle, Integer, Hash)>] ServiceDocsVoicemailGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_post_with_http_info(account_id, voicemail, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_post ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_post"
      end
      # verify the required parameter 'voicemail' is set
      if @api_client.config.client_side_validation && voicemail.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail' when calling VoicemailApi.v1_account_account_id_voicemail_post"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(voicemail)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete Voicemail Box
    # Delete a voicemail box in an account.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailGetSingle]
    def v1_account_account_id_voicemail_voicemail_id_delete(account_id, voicemail_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_delete_with_http_info(account_id, voicemail_id, opts)
      data
    end

    # Delete Voicemail Box
    # Delete a voicemail box in an account.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailGetSingle, Integer, Hash)>] ServiceDocsVoicemailGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_delete_with_http_info(account_id, voicemail_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_delete ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_delete"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_delete"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_delete",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Voicemail Box Details
    # Get information about a single voicemail box.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailGetSingle]
    def v1_account_account_id_voicemail_voicemail_id_get(account_id, voicemail_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_get_with_http_info(account_id, voicemail_id, opts)
      data
    end

    # Get Voicemail Box Details
    # Get information about a single voicemail box.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailGetSingle, Integer, Hash)>] ServiceDocsVoicemailGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_get_with_http_info(account_id, voicemail_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_get ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_get"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_get"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Voicemail Message List
    # Get a list of voicemail messages from an account's voicemail box.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] voicemail ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key start_key for pagination that was returned as next_start_key from your previous call
    # @option opts [Integer] :page_size number of records to return, range 1 to 50
    # @return [ServiceDocsVoicemailMessageGetAll]
    def v1_account_account_id_voicemail_voicemail_id_message_get(account_id, voicemail_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_message_get_with_http_info(account_id, voicemail_id, opts)
      data
    end

    # Get Voicemail Message List
    # Get a list of voicemail messages from an account&#39;s voicemail box.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] voicemail ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @option opts [String] :start_key start_key for pagination that was returned as next_start_key from your previous call
    # @option opts [Integer] :page_size number of records to return, range 1 to 50
    # @return [Array<(ServiceDocsVoicemailMessageGetAll, Integer, Hash)>] ServiceDocsVoicemailMessageGetAll data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_message_get_with_http_info(account_id, voicemail_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_get ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_get"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_get"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}/message'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'start_key'] = opts[:'start_key'] if !opts[:'start_key'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailMessageGetAll'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_message_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete Voicemail Message
    # Delete a voicemail message from a voicemail box in an account.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param message_id [String] message ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailMessageGetSingle]
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_delete(account_id, voicemail_id, message_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_message_message_id_delete_with_http_info(account_id, voicemail_id, message_id, opts)
      data
    end

    # Delete Voicemail Message
    # Delete a voicemail message from a voicemail box in an account.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param message_id [String] message ID, 32 alpha numeric
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailMessageGetSingle, Integer, Hash)>] ServiceDocsVoicemailMessageGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_delete_with_http_info(account_id, voicemail_id, message_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_delete ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_delete"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_delete"
      end
      # verify the required parameter 'message_id' is set
      if @api_client.config.client_side_validation && message_id.nil?
        fail ArgumentError, "Missing the required parameter 'message_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_delete"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s)).sub('{' + 'messageID' + '}', CGI.escape(message_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailMessageGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_delete",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_message_message_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Voicemail Message Details
    # Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param message_id [String] Message ID, 39 (yyyymm-&lt;32 id&gt;)
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailMessageGetSingle]
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_get(account_id, voicemail_id, message_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_message_message_id_get_with_http_info(account_id, voicemail_id, message_id, opts)
      data
    end

    # Get Voicemail Message Details
    # Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param message_id [String] Message ID, 39 (yyyymm-&lt;32 id&gt;)
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailMessageGetSingle, Integer, Hash)>] ServiceDocsVoicemailMessageGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_get_with_http_info(account_id, voicemail_id, message_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_get ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_get"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_get"
      end
      # verify the required parameter 'message_id' is set
      if @api_client.config.client_side_validation && message_id.nil?
        fail ArgumentError, "Missing the required parameter 'message_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_get"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s)).sub('{' + 'messageID' + '}', CGI.escape(message_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailMessageGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_message_message_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Voicemail Message
    # Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param message_id [String] Message ID, 39 (yyyymm-&lt;32 id&gt;)
    # @param req_body [ServiceVOIPVoicemailMessageChange] payload fields
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailMessageGetSingle]
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_put(account_id, voicemail_id, message_id, req_body, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_message_message_id_put_with_http_info(account_id, voicemail_id, message_id, req_body, opts)
      data
    end

    # Update Voicemail Message
    # Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param message_id [String] Message ID, 39 (yyyymm-&lt;32 id&gt;)
    # @param req_body [ServiceVOIPVoicemailMessageChange] payload fields
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailMessageGetSingle, Integer, Hash)>] ServiceDocsVoicemailMessageGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_put_with_http_info(account_id, voicemail_id, message_id, req_body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_put ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_put"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_put"
      end
      # verify the required parameter 'message_id' is set
      if @api_client.config.client_side_validation && message_id.nil?
        fail ArgumentError, "Missing the required parameter 'message_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_put"
      end
      # verify the required parameter 'req_body' is set
      if @api_client.config.client_side_validation && req_body.nil?
        fail ArgumentError, "Missing the required parameter 'req_body' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_put"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s)).sub('{' + 'messageID' + '}', CGI.escape(message_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(req_body)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailMessageGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_put",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_message_message_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Voicemail Message File
    # Get the original audio content of a specific voicemail message identified by its unique ID within an account's voicemail box. URL Param \"voicemailID\" is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \"messageID\" is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
    # @param account_id [String] Account ID, unique 32-character alphanumeric identifier
    # @param voicemail_id [String] Voicemail Box ID, unique 32-character alphanumeric identifier
    # @param message_id [String] Message ID, unique 32-character alphanumeric identifier
    # @param [Hash] opts the optional parameters
    # @return [File]
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get(account_id, voicemail_id, message_id, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get_with_http_info(account_id, voicemail_id, message_id, opts)
      data
    end

    # Get Voicemail Message File
    # Get the original audio content of a specific voicemail message identified by its unique ID within an account&#39;s voicemail box. URL Param \&quot;voicemailID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \&quot;messageID\&quot; is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
    # @param account_id [String] Account ID, unique 32-character alphanumeric identifier
    # @param voicemail_id [String] Voicemail Box ID, unique 32-character alphanumeric identifier
    # @param message_id [String] Message ID, unique 32-character alphanumeric identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(File, Integer, Hash)>] File data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get_with_http_info(account_id, voicemail_id, message_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get"
      end
      # verify the required parameter 'message_id' is set
      if @api_client.config.client_side_validation && message_id.nil?
        fail ArgumentError, "Missing the required parameter 'message_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s)).sub('{' + 'messageID' + '}', CGI.escape(message_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/octet-stream']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'File'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Add Voicemail Message File
    # Associate an audio recording file with the voicemail to fully complete the message.
    # @param account_id [String] Account ID, 32 alphanumeric characters
    # @param voicemail_id [String] Voicemail ID, 32 alphanumeric characters
    # @param message_id [String] Message ID, 32 alphanumeric characters
    # @param file [File] Audio file to upload
    # @param [Hash] opts the optional parameters
    # @return [Hash<String, Object>]
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post(account_id, voicemail_id, message_id, file, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post_with_http_info(account_id, voicemail_id, message_id, file, opts)
      data
    end

    # Add Voicemail Message File
    # Associate an audio recording file with the voicemail to fully complete the message.
    # @param account_id [String] Account ID, 32 alphanumeric characters
    # @param voicemail_id [String] Voicemail ID, 32 alphanumeric characters
    # @param message_id [String] Message ID, 32 alphanumeric characters
    # @param file [File] Audio file to upload
    # @param [Hash] opts the optional parameters
    # @return [Array<(Hash<String, Object>, Integer, Hash)>] Hash<String, Object> data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post_with_http_info(account_id, voicemail_id, message_id, file, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post"
      end
      # verify the required parameter 'message_id' is set
      if @api_client.config.client_side_validation && message_id.nil?
        fail ArgumentError, "Missing the required parameter 'message_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post"
      end
      # verify the required parameter 'file' is set
      if @api_client.config.client_side_validation && file.nil?
        fail ArgumentError, "Missing the required parameter 'file' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s)).sub('{' + 'messageID' + '}', CGI.escape(message_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['multipart/form-data'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['file'] = file

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Hash<String, Object>'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_message_message_id_raw_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create Voicemail Message
    # Create the container information for a recorded voicemail message in a voicemail box.
    # @param account_id [String] account ID, 32 alphanumeric
    # @param voicemail_id [String] voicemail ID, 32 alphanumeric
    # @param message [ServiceVOIPVoicemailMessageAddData] voicemail message payload fields
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailMessageGetSingle]
    def v1_account_account_id_voicemail_voicemail_id_message_post(account_id, voicemail_id, message, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_message_post_with_http_info(account_id, voicemail_id, message, opts)
      data
    end

    # Create Voicemail Message
    # Create the container information for a recorded voicemail message in a voicemail box.
    # @param account_id [String] account ID, 32 alphanumeric
    # @param voicemail_id [String] voicemail ID, 32 alphanumeric
    # @param message [ServiceVOIPVoicemailMessageAddData] voicemail message payload fields
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailMessageGetSingle, Integer, Hash)>] ServiceDocsVoicemailMessageGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_message_post_with_http_info(account_id, voicemail_id, message, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_post ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_post"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_post"
      end
      # verify the required parameter 'message' is set
      if @api_client.config.client_side_validation && message.nil?
        fail ArgumentError, "Missing the required parameter 'message' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_post"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}/message'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(message)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailMessageGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_message_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_message_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Voicemail Box
    # Update the settings in an individual voicemail box, such as the owner, PIN, etc.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param req_body [ServiceVOIPVoicemailAddEditData] payload fields
    # @param [Hash] opts the optional parameters
    # @return [ServiceDocsVoicemailGetSingle]
    def v1_account_account_id_voicemail_voicemail_id_put(account_id, voicemail_id, req_body, opts = {})
      data, _status_code, _headers = v1_account_account_id_voicemail_voicemail_id_put_with_http_info(account_id, voicemail_id, req_body, opts)
      data
    end

    # Update Voicemail Box
    # Update the settings in an individual voicemail box, such as the owner, PIN, etc.
    # @param account_id [String] Account ID, 32 alpha numeric
    # @param voicemail_id [String] Voicemail ID, 32 alpha numeric
    # @param req_body [ServiceVOIPVoicemailAddEditData] payload fields
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServiceDocsVoicemailGetSingle, Integer, Hash)>] ServiceDocsVoicemailGetSingle data, response status code and response headers
    def v1_account_account_id_voicemail_voicemail_id_put_with_http_info(account_id, voicemail_id, req_body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VoicemailApi.v1_account_account_id_voicemail_voicemail_id_put ...'
      end
      # verify the required parameter 'account_id' is set
      if @api_client.config.client_side_validation && account_id.nil?
        fail ArgumentError, "Missing the required parameter 'account_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_put"
      end
      # verify the required parameter 'voicemail_id' is set
      if @api_client.config.client_side_validation && voicemail_id.nil?
        fail ArgumentError, "Missing the required parameter 'voicemail_id' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_put"
      end
      # verify the required parameter 'req_body' is set
      if @api_client.config.client_side_validation && req_body.nil?
        fail ArgumentError, "Missing the required parameter 'req_body' when calling VoicemailApi.v1_account_account_id_voicemail_voicemail_id_put"
      end
      # resource path
      local_var_path = '/v1/account/{accountID}/voicemail/{voicemailID}'.sub('{' + 'accountID' + '}', CGI.escape(account_id.to_s)).sub('{' + 'voicemailID' + '}', CGI.escape(voicemail_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(req_body)

      # return_type
      return_type = opts[:debug_return_type] || 'ServiceDocsVoicemailGetSingle'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['BearerAuth']

      new_options = opts.merge(
        :operation => :"VoicemailApi.v1_account_account_id_voicemail_voicemail_id_put",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VoicemailApi#v1_account_account_id_voicemail_voicemail_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
